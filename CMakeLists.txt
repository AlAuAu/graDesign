CMAKE_MINIMUM_REQUIRED(VERSION 3.0)

#给工程取一个名字
project(strobemer)

#openmp
find_package(OpenMP REQUIRED)
if(OPENMP_FOUND)
message("OPENMP FOUND")
set(CMAKE_CXX_COMPILER "/usr/bin/g++")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DVERB")
set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${OpenMP_EXE_LINKER_FLAGS}")
set(EXECUTABLE_OUTPUT_PATH .)
endif()

set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_FLAGS "-O3 -g -ffast-math ${CMAKE_CXX_FLAGS}")


#把rabbitfx引入   
AUX_SOURCE_DIRECTORY(io SOURCE_LIST)
ADD_LIBRARY(rabbitfx ${SOURCE_LIST})
TARGET_LINK_LIBRARIES(rabbitfx z)

#AUX_SOURCE_DIRECTORY(originCode DIR_SRCS)
#ADD_EXECUTABLE(strobemer ${DIR_SRCS})
#ADD_EXECUTABLE(test RabbitFXtest.cpp)
#TARGET_LINK_LIBRARIES(strobemer z)
#TARGET_LINK_LIBRARIES(test rabbitfx)

#AUX_SOURCE_DIRECTORY(. MAINSOURCE)
#ADD_EXECUTABLE(main ${MAINSOURCE})
ADD_EXECUTABLE(main consumerBuff.cpp strobemer.cpp main.cpp)
TARGET_LINK_LIBRARIES(main rabbitfx)
